{"mappings":"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","sources":["src/js/modalOurTeam.js","node_modules/hystmodal/src/hystmodal.js"],"sourcesContent":["import HystModal from 'hystmodal';\nimport 'hystmodal/dist/hystmodal.min.css';\n\nconst myModal = new HystModal({\n  linkAttributeName: 'data-hystmodal',\n  closeOnButton: true,\n});\n\nfunction onClick() {\n  myModal.init();\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-underscore-dangle */\nexport default class HystModal {\n  constructor(props) {\n    const defaultConfig = {\n      backscroll: true,\n      linkAttributeName: 'data-hystmodal',\n      closeOnOverlay: true,\n      closeOnEsc: true,\n      closeOnButton: true,\n      waitTransitions: false,\n      catchFocus: true,\n      fixedSelectors: '*[data-hystfixed]',\n      beforeOpen: () => { },\n      afterClose: () => { },\n    };\n    this.config = Object.assign(defaultConfig, props);\n    if (this.config.linkAttributeName) {\n      this.init();\n    }\n    this._closeAfterTransition = this._closeAfterTransition.bind(this);\n  }\n\n  init() {\n    this.isOpened = false;\n    this.openedWindow = false;\n    this.starter = false;\n    this._nextWindows = false;\n    this._scrollPosition = 0;\n    this._reopenTrigger = false;\n    this._overlayChecker = false;\n    this._isMoved = false;\n    this._focusElements = [\n      'a[href]',\n      'area[href]',\n      'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\n      'select:not([disabled]):not([aria-hidden])',\n      'textarea:not([disabled]):not([aria-hidden])',\n      'button:not([disabled]):not([aria-hidden])',\n      'iframe',\n      'object',\n      'embed',\n      '[contenteditable]',\n      '[tabindex]:not([tabindex^=\"-\"])',\n    ];\n    this._modalBlock = false;\n\n    const existingShadow = document.querySelector('.hystmodal__shadow');\n    if (existingShadow) {\n      this.shadow = existingShadow;\n    } else {\n      this.shadow = document.createElement('div');\n      this.shadow.classList.add('hystmodal__shadow');\n      document.body.appendChild(this.shadow);\n    }\n    this.eventsFeeler();\n  }\n\n  eventsFeeler() {\n    document.addEventListener('click', (e) => {\n      const clickedlink = e.target.closest(`[${this.config.linkAttributeName}]`);\n      if (!this._isMoved && clickedlink) {\n        e.preventDefault();\n        this.starter = clickedlink;\n        const targetSelector = this.starter.getAttribute(this.config.linkAttributeName);\n        this._nextWindows = document.querySelector(targetSelector);\n        this.open();\n        return;\n      }\n      if (this.config.closeOnButton && e.target.closest('[data-hystclose]')) {\n        this.close();\n      }\n    });\n\n    if (this.config.closeOnOverlay) {\n      document.addEventListener('mousedown', (e) => {\n        if (!this._isMoved && (e.target instanceof Element) && !e.target.classList.contains('hystmodal__wrap')) return;\n        this._overlayChecker = true;\n      });\n\n      document.addEventListener('mouseup', (e) => {\n        if (!this._isMoved && (e.target instanceof Element) && this._overlayChecker && e.target.classList.contains('hystmodal__wrap')) {\n          e.preventDefault();\n          this._overlayChecker = !this._overlayChecker;\n          this.close();\n          return;\n        }\n        this._overlayChecker = false;\n      });\n    }\n\n    window.addEventListener('keydown', (e) => {\n      if (!this._isMoved && this.config.closeOnEsc && e.which === 27 && this.isOpened) {\n        e.preventDefault();\n        this.close();\n        return;\n      }\n      if (!this._isMoved && this.config.catchFocus && e.which === 9 && this.isOpened) {\n        this.focusCatcher(e);\n      }\n    });\n  }\n\n  open(selector) {\n    if (selector) {\n      if (typeof (selector) === 'string') {\n        this._nextWindows = document.querySelector(selector);\n      } else {\n        this._nextWindows = selector;\n      }\n    }\n    if (!this._nextWindows) {\n      console.log('Warning: hystModal selector is not found');\n      return;\n    }\n    if (this.isOpened) {\n      this._reopenTrigger = true;\n      this.close();\n      return;\n    }\n    this.openedWindow = this._nextWindows;\n    this._modalBlock = this.openedWindow.querySelector('.hystmodal__window');\n    this.config.beforeOpen(this);\n    this._bodyScrollControl();\n    this.shadow.classList.add('hystmodal__shadow--show');\n    this.openedWindow.classList.add('hystmodal--active');\n    this.openedWindow.setAttribute('aria-hidden', 'false');\n    if (this.config.catchFocus) this.focusControl();\n    this.isOpened = true;\n  }\n\n  close() {\n    if (!this.isOpened) {\n      return;\n    }\n    if (this.config.waitTransitions) {\n      this.openedWindow.classList.add('hystmodal--moved');\n      this._isMoved = true;\n      this.openedWindow.addEventListener('transitionend', this._closeAfterTransition);\n      this.openedWindow.classList.remove('hystmodal--active');\n    } else {\n      this.openedWindow.classList.remove('hystmodal--active');\n      this._closeAfterTransition();\n    }\n  }\n\n  _closeAfterTransition() {\n    this.openedWindow.classList.remove('hystmodal--moved');\n    this.openedWindow.removeEventListener('transitionend', this._closeAfterTransition);\n    this._isMoved = false;\n    this.shadow.classList.remove('hystmodal__shadow--show');\n    this.openedWindow.setAttribute('aria-hidden', 'true');\n\n    if (this.config.catchFocus) this.focusControl();\n    this._bodyScrollControl();\n    this.isOpened = false;\n    this.openedWindow.scrollTop = 0;\n    this.config.afterClose(this);\n\n    if (this._reopenTrigger) {\n      this._reopenTrigger = false;\n      this.open();\n    }\n  }\n\n  focusControl() {\n    const nodes = this.openedWindow.querySelectorAll(this._focusElements);\n    if (this.isOpened && this.starter) {\n      this.starter.focus();\n    } else if (nodes.length) nodes[0].focus();\n  }\n\n  focusCatcher(e) {\n    const nodes = this.openedWindow.querySelectorAll(this._focusElements);\n    const nodesArray = Array.prototype.slice.call(nodes);\n    if (!this.openedWindow.contains(document.activeElement)) {\n      nodesArray[0].focus();\n      e.preventDefault();\n    } else {\n      const focusedItemIndex = nodesArray.indexOf(document.activeElement);\n      if (e.shiftKey && focusedItemIndex === 0) {\n        nodesArray[nodesArray.length - 1].focus();\n        e.preventDefault();\n      }\n      if (!e.shiftKey && focusedItemIndex === nodesArray.length - 1) {\n        nodesArray[0].focus();\n        e.preventDefault();\n      }\n    }\n  }\n\n  _bodyScrollControl() {\n    if (!this.config.backscroll) return;\n\n    // collect fixed selectors to array\n    const fixedSelectorsElems = document.querySelectorAll(this.config.fixedSelectors);\n    const fixedSelectors = Array.prototype.slice.call(fixedSelectorsElems);\n\n    const html = document.documentElement;\n    if (this.isOpened === true) {\n      html.classList.remove('hystmodal__opened');\n      html.style.marginRight = '';\n      fixedSelectors.forEach((el) => {\n        el.style.marginRight = '';\n      });\n      window.scrollTo(0, this._scrollPosition);\n      html.style.top = '';\n      return;\n    }\n    this._scrollPosition = window.pageYOffset;\n    const marginSize = window.innerWidth - html.clientWidth;\n    html.style.top = `${-this._scrollPosition}px`;\n\n    if (marginSize) {\n      html.style.marginRight = `${marginSize}px`;\n      fixedSelectors.forEach((el) => {\n        el.style.marginRight = `${parseInt(getComputedStyle(el).marginRight, 10) + marginSize}px`;\n      });\n    }\n    html.classList.add('hystmodal__opened');\n  }\n}\n"],"names":["init","this","isOpened","openedWindow","starter","_nextWindows","_scrollPosition","_reopenTrigger","_overlayChecker","_isMoved","_focusElements","_modalBlock","existingShadow","document","querySelector","shadow","createElement","classList","add","body","appendChild","eventsFeeler","addEventListener","e","clickedlink","target","closest","config","linkAttributeName","preventDefault","targetSelector","getAttribute","open","closeOnButton","close","closeOnOverlay","Element","contains","window","closeOnEsc","which","catchFocus","focusCatcher","selector","beforeOpen","_bodyScrollControl","setAttribute","focusControl","console","log","waitTransitions","_closeAfterTransition","remove","removeEventListener","scrollTop","afterClose","nodes","querySelectorAll","focus","length","nodesArray","Array","prototype","slice","call","activeElement","focusedItemIndex","indexOf","shiftKey","backscroll","fixedSelectorsElems","fixedSelectors","html","documentElement","style","marginRight","forEach","el","scrollTo","top","pageYOffset","marginSize","innerWidth","clientWidth","parseInt","getComputedStyle","constructor","props","Object","assign","bind"],"version":3,"file":"index.9dcb751f.js.map"}