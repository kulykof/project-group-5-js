{"mappings":"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","sources":["node_modules/hystmodal/src/hystmodal.js","src/js/modalOurTeam.js","<<jsx-config-pragma.js>>"],"sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable no-underscore-dangle */\nexport default class HystModal {\n  constructor(props) {\n    const defaultConfig = {\n      backscroll: true,\n      linkAttributeName: 'data-hystmodal',\n      closeOnOverlay: true,\n      closeOnEsc: true,\n      closeOnButton: true,\n      waitTransitions: false,\n      catchFocus: true,\n      fixedSelectors: '*[data-hystfixed]',\n      beforeOpen: () => { },\n      afterClose: () => { },\n    };\n    this.config = Object.assign(defaultConfig, props);\n    if (this.config.linkAttributeName) {\n      this.init();\n    }\n    this._closeAfterTransition = this._closeAfterTransition.bind(this);\n  }\n\n  init() {\n    this.isOpened = false;\n    this.openedWindow = false;\n    this.starter = false;\n    this._nextWindows = false;\n    this._scrollPosition = 0;\n    this._reopenTrigger = false;\n    this._overlayChecker = false;\n    this._isMoved = false;\n    this._focusElements = [\n      'a[href]',\n      'area[href]',\n      'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\n      'select:not([disabled]):not([aria-hidden])',\n      'textarea:not([disabled]):not([aria-hidden])',\n      'button:not([disabled]):not([aria-hidden])',\n      'iframe',\n      'object',\n      'embed',\n      '[contenteditable]',\n      '[tabindex]:not([tabindex^=\"-\"])',\n    ];\n    this._modalBlock = false;\n\n    const existingShadow = document.querySelector('.hystmodal__shadow');\n    if (existingShadow) {\n      this.shadow = existingShadow;\n    } else {\n      this.shadow = document.createElement('div');\n      this.shadow.classList.add('hystmodal__shadow');\n      document.body.appendChild(this.shadow);\n    }\n    this.eventsFeeler();\n  }\n\n  eventsFeeler() {\n    document.addEventListener('click', (e) => {\n      const clickedlink = e.target.closest(`[${this.config.linkAttributeName}]`);\n      if (!this._isMoved && clickedlink) {\n        e.preventDefault();\n        this.starter = clickedlink;\n        const targetSelector = this.starter.getAttribute(this.config.linkAttributeName);\n        this._nextWindows = document.querySelector(targetSelector);\n        this.open();\n        return;\n      }\n      if (this.config.closeOnButton && e.target.closest('[data-hystclose]')) {\n        this.close();\n      }\n    });\n\n    if (this.config.closeOnOverlay) {\n      document.addEventListener('mousedown', (e) => {\n        if (!this._isMoved && (e.target instanceof Element) && !e.target.classList.contains('hystmodal__wrap')) return;\n        this._overlayChecker = true;\n      });\n\n      document.addEventListener('mouseup', (e) => {\n        if (!this._isMoved && (e.target instanceof Element) && this._overlayChecker && e.target.classList.contains('hystmodal__wrap')) {\n          e.preventDefault();\n          this._overlayChecker = !this._overlayChecker;\n          this.close();\n          return;\n        }\n        this._overlayChecker = false;\n      });\n    }\n\n    window.addEventListener('keydown', (e) => {\n      if (!this._isMoved && this.config.closeOnEsc && e.which === 27 && this.isOpened) {\n        e.preventDefault();\n        this.close();\n        return;\n      }\n      if (!this._isMoved && this.config.catchFocus && e.which === 9 && this.isOpened) {\n        this.focusCatcher(e);\n      }\n    });\n  }\n\n  open(selector) {\n    if (selector) {\n      if (typeof (selector) === 'string') {\n        this._nextWindows = document.querySelector(selector);\n      } else {\n        this._nextWindows = selector;\n      }\n    }\n    if (!this._nextWindows) {\n      console.log('Warning: hystModal selector is not found');\n      return;\n    }\n    if (this.isOpened) {\n      this._reopenTrigger = true;\n      this.close();\n      return;\n    }\n    this.openedWindow = this._nextWindows;\n    this._modalBlock = this.openedWindow.querySelector('.hystmodal__window');\n    this.config.beforeOpen(this);\n    this._bodyScrollControl();\n    this.shadow.classList.add('hystmodal__shadow--show');\n    this.openedWindow.classList.add('hystmodal--active');\n    this.openedWindow.setAttribute('aria-hidden', 'false');\n    if (this.config.catchFocus) this.focusControl();\n    this.isOpened = true;\n  }\n\n  close() {\n    if (!this.isOpened) {\n      return;\n    }\n    if (this.config.waitTransitions) {\n      this.openedWindow.classList.add('hystmodal--moved');\n      this._isMoved = true;\n      this.openedWindow.addEventListener('transitionend', this._closeAfterTransition);\n      this.openedWindow.classList.remove('hystmodal--active');\n    } else {\n      this.openedWindow.classList.remove('hystmodal--active');\n      this._closeAfterTransition();\n    }\n  }\n\n  _closeAfterTransition() {\n    this.openedWindow.classList.remove('hystmodal--moved');\n    this.openedWindow.removeEventListener('transitionend', this._closeAfterTransition);\n    this._isMoved = false;\n    this.shadow.classList.remove('hystmodal__shadow--show');\n    this.openedWindow.setAttribute('aria-hidden', 'true');\n\n    if (this.config.catchFocus) this.focusControl();\n    this._bodyScrollControl();\n    this.isOpened = false;\n    this.openedWindow.scrollTop = 0;\n    this.config.afterClose(this);\n\n    if (this._reopenTrigger) {\n      this._reopenTrigger = false;\n      this.open();\n    }\n  }\n\n  focusControl() {\n    const nodes = this.openedWindow.querySelectorAll(this._focusElements);\n    if (this.isOpened && this.starter) {\n      this.starter.focus();\n    } else if (nodes.length) nodes[0].focus();\n  }\n\n  focusCatcher(e) {\n    const nodes = this.openedWindow.querySelectorAll(this._focusElements);\n    const nodesArray = Array.prototype.slice.call(nodes);\n    if (!this.openedWindow.contains(document.activeElement)) {\n      nodesArray[0].focus();\n      e.preventDefault();\n    } else {\n      const focusedItemIndex = nodesArray.indexOf(document.activeElement);\n      if (e.shiftKey && focusedItemIndex === 0) {\n        nodesArray[nodesArray.length - 1].focus();\n        e.preventDefault();\n      }\n      if (!e.shiftKey && focusedItemIndex === nodesArray.length - 1) {\n        nodesArray[0].focus();\n        e.preventDefault();\n      }\n    }\n  }\n\n  _bodyScrollControl() {\n    if (!this.config.backscroll) return;\n\n    // collect fixed selectors to array\n    const fixedSelectorsElems = document.querySelectorAll(this.config.fixedSelectors);\n    const fixedSelectors = Array.prototype.slice.call(fixedSelectorsElems);\n\n    const html = document.documentElement;\n    if (this.isOpened === true) {\n      html.classList.remove('hystmodal__opened');\n      html.style.marginRight = '';\n      fixedSelectors.forEach((el) => {\n        el.style.marginRight = '';\n      });\n      window.scrollTo(0, this._scrollPosition);\n      html.style.top = '';\n      return;\n    }\n    this._scrollPosition = window.pageYOffset;\n    const marginSize = window.innerWidth - html.clientWidth;\n    html.style.top = `${-this._scrollPosition}px`;\n\n    if (marginSize) {\n      html.style.marginRight = `${marginSize}px`;\n      fixedSelectors.forEach((el) => {\n        el.style.marginRight = `${parseInt(getComputedStyle(el).marginRight, 10) + marginSize}px`;\n      });\n    }\n    html.classList.add('hystmodal__opened');\n  }\n}\n","import HystModal from 'hystmodal';\nimport 'hystmodal/dist/hystmodal.min.css';\n\nconst myModal = new HystModal({\n  linkAttributeName: 'data-hystmodal',\n  closeOnButton: true,\n});\n\nfunction onClick() {\n  myModal.init();\n}\n",null],"names":["$8MBJY","parcelRequire","HystModal","props","this","config","Object","assign","backscroll","linkAttributeName","closeOnOverlay","closeOnEsc","closeOnButton","waitTransitions","catchFocus","fixedSelectors","beforeOpen","afterClose","init","_closeAfterTransition","bind","key","isOpened","openedWindow","starter","_nextWindows","_scrollPosition","_reopenTrigger","_overlayChecker","_isMoved","_focusElements","_modalBlock","existingShadow","document","querySelector","shadow","createElement","classList","add","body","appendChild","eventsFeeler","addEventListener","e","clickedlink","target","closest","concat","_this","preventDefault","targetSelector","getAttribute","open","close","_this1","Element","contains","window","which","focusCatcher","selector","_bodyScrollControl","setAttribute","focusControl","console","log","remove","removeEventListener","scrollTop","nodes","querySelectorAll","focus","length","nodesArray","Array","prototype","slice","call","activeElement","focusedItemIndex","indexOf","shiftKey","fixedSelectorsElems","html","documentElement","style","marginRight","forEach","el","scrollTo","top","pageYOffset","marginSize","innerWidth","clientWidth","parseInt","getComputedStyle"],"version":3,"file":"index.787abfc7.js.map"}